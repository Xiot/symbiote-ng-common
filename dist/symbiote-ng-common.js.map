{"version":3,"sources":["services/data/symbiote.data.module.js","services/data/storageService.js","services/data/httpClient.js","services/data/eventService.js","services/util.js","services/services.module.js"],"names":["angular","module","factory","StorageService","$window","_local","localStorage","_session","sessionStorage","get","_get","set","_set","has","_has","remove","_remove","key","sessionValue","_isSet","_safeParse","localValue","undefined","value","persist","_isUnset","store","json","JSON","stringify","setItem","jsonText","length","parse","e","provider","HttpClientProvider","baseUri","authTokenName","authTokenType","$get","HttpClient","$http","$q","$cacheFactory","storageService","service","post","_post","put","_put","delete","_delete","patch","_patch","uri","config","_execute","data","method","_extendConfig","request","url","_getAbsoluteUri","extend","forceRefresh","httpCache","fullUri","startsWith","endsWith","substring","indexOf","auth","authKey","scheme","headers","Authorization","copy","token","EventService","$rootScope","on","addListener","raise","fireEvent","eventName","listener","$on","args","$emit","String","prototype","str","slice","snakeCase","separator","SNAKE_CASE_REGEXP","replace","letter","pos","toLowerCase","contains"],"mappings":"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","file":"symbiote-ng-common.js","sourcesContent":["angular.module('symbiote.data', []);","angular.module('symbiote.data')\r\n    .factory('storageService', StorageService);\r\n\r\n/* @ngInject */\r\nfunction StorageService($window) {\r\n\r\n    var _local = $window.localStorage;\r\n    var _session = $window.sessionStorage;\r\n\r\n    return {\r\n        get: _get,\r\n        set: _set,\r\n        has: _has,\r\n        remove: _remove\r\n    };\r\n\r\n    function _get(key) {\r\n\r\n        var sessionValue = _session[key];\r\n        if (_isSet(sessionValue))\r\n            return _safeParse(sessionValue);\r\n\r\n        var localValue = _local[key];\r\n        if (_isSet(localValue))\r\n            return _safeParse(localValue);\r\n\r\n        return undefined;\r\n    }\r\n\r\n    function _set(key, value, persist) {\r\n\r\n        if (_isUnset(value))\r\n            return _remove(key);\r\n\r\n        var store = !!persist ? _local : _session;\r\n        var json = JSON.stringify(value);\r\n        store.setItem(key, value);\r\n    }\r\n\r\n    function _remove(key) {\r\n        delete _local[key];\r\n        delete _session[key];\r\n    }\r\n\r\n    function _has(key) {\r\n        return _isSet(_session[key]) || _isSet(_local[key]);\r\n    }\r\n\r\n\r\n    function _safeParse(jsonText) {\r\n        if (jsonText === undefined || jsonText === null)\r\n            return jsonText;\r\n\r\n        if (typeof jsonText !== \"string\")\r\n            return jsonText;\r\n\r\n        if (jsonText.length === 0)\r\n            return jsonText;\r\n\r\n        try {\r\n            return JSON.parse(jsonText);\r\n        } catch (e) {\r\n            return jsonText;\r\n        }\r\n    }\r\n\r\n    function _isUnset(value) {\r\n        return value === undefined || value === null;\r\n    }\r\n\r\n    function _isSet(value) {\r\n        return value !== undefined && value != null;\r\n    }\r\n}","angular.module(\"symbiote.data\")\r\n    .provider('httpClient', HttpClientProvider);\r\n\r\nfunction HttpClientProvider() {\r\n\r\n    this.baseUri = \"\";\r\n    this.authTokenName = \"auth-token\";\r\n    this.authTokenType = \"Bearer\";\r\n\r\n    var provider = this;\r\n\r\n    this.$get = HttpClient;\r\n\r\n    /* @ngInject */\r\n    function HttpClient($http, $q, $cacheFactory, storageService) {\r\n\r\n        var service = {\r\n            get: _get,\r\n            post: _post,\r\n            put: _put,\r\n            delete: _delete,\r\n            patch: _patch\r\n        };\r\n        return service;\r\n\r\n        function _get(uri, config) {\r\n            return _execute('GET', uri, null, config);\r\n        }\r\n\r\n        function _post(uri, data, config) {\r\n            return _execute('POST', uri, data, config);\r\n        }\r\n\r\n        function _put(uri, data, config) {\r\n            return _execute('PUT', uri, data, config);\r\n        }\r\n\r\n        function _delete(uri, config) {\r\n            return _execute('DELETE', uri, null, config);\r\n        }\r\n\r\n        function _patch(uri, data, config) {\r\n            return _execute('PATCH', uri, data, config);\r\n        }\r\n\r\n        function _execute(method, uri, data, config) {\r\n\r\n            config = _extendConfig(config);\r\n\r\n            var request = {\r\n                method: method,\r\n                url: _getAbsoluteUri(uri),\r\n                data: data\r\n            };\r\n\r\n            angular.extend(request, config);\r\n\r\n            if (config.forceRefresh) {\r\n                var httpCache = $cacheFactory.get('$http');\r\n                httpCache.remove(fullUri);\r\n            }\r\n\r\n            return $http(request);\r\n        }\r\n\r\n        function _getAbsoluteUri(uri) {\r\n\r\n            if (!provider.baseUri)\r\n                return uri;\r\n\r\n            uri = uri || \"\";\r\n\r\n            if (uri.startsWith('/') && provider.baseUri.endsWith('/'))\r\n                uri = uri.substring(1);\r\n\r\n            return uri.indexOf('://', 0) < 0 ? provider.baseUri + uri : uri;\r\n        }\r\n\r\n        function _extendConfig(config) {\r\n\r\n            config = config || {};\r\n            \r\n            //TODO: Move the authentication token stuff into an interceptor\r\n            if (config.auth) {\r\n\r\n                var authKey = '';\r\n                for (var scheme in config.auth) {\r\n                    authKey += scheme + ' ' + config.auth[scheme] + ' ';\r\n                }\r\n\r\n                angular.extend(config, {\r\n                    headers: {\r\n                        Authorization: authKey\r\n                    }\r\n                }, angular.copy(config));\r\n\r\n            } else if (provider.authTokenName && provider.authTokenType) {\r\n                var token = storageService.get(provider.authTokenName);\r\n                if (token) {\r\n                    angular.extend(config, {\r\n                        headers: {\r\n                            Authorization: provider.authTokenType + ' ' + token\r\n                        }\r\n                    }, angular.copy(config));\r\n                }\r\n            }\r\n            return config;\r\n        }\r\n    }\r\n}"," angular.module('symbiote.data')\r\n \t.factory('eventService', EventService);\r\n\r\n /* ngInject */\r\n function EventService($rootScope) {\r\n\r\n \tvar service = {\r\n \t\ton: addListener,\r\n \t\traise: fireEvent\r\n \t};\r\n\r\n \treturn service;\r\n\r\n \tfunction addListener(eventName, listener) { \t\t\r\n        return $rootScope.$on(eventName, listener);   \r\n \t}\r\n\r\n \tfunction fireEvent(eventName, args) {\r\n        $rootScope.$emit(eventName, args); \t\t\r\n \t}\r\n }","\r\nif (typeof String.prototype.startsWith != 'function') {\r\n    String.prototype.startsWith = function (str) {\r\n        return this.slice(0, str.length) == str;\r\n    };\r\n}\r\n\r\nif (typeof String.prototype.endsWith != 'function') {\r\n    String.prototype.endsWith = function (str) {\r\n        return this.slice(-str.length) == str;\r\n    };\r\n}\r\n\r\nif (typeof String.prototype.snakeCase != 'function') {\r\n    String.prototype.snakeCase = function (separator) {\r\n        var SNAKE_CASE_REGEXP = /[A-Z]/g;\r\n\r\n        separator = separator || '-';\r\n        return this.replace(SNAKE_CASE_REGEXP, function (letter, pos) {\r\n            return (pos ? separator : '') + letter.toLowerCase();\r\n        });\r\n    }\r\n}\r\n\r\nif (typeof String.prototype.contains != 'function') {\r\n    String.prototype.contains = function (substring) {\r\n        return this.indexOf(substring) !== -1;\r\n    }\r\n}\r\n","angular.module(\"symbiote.common\", [\r\n\t\"symbiote.data\"\r\n\t]);"],"sourceRoot":"/source/"}